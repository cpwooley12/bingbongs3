name: Weekly Ice Report

on:
  schedule:
    - cron: '0 23 * * 1'  # Every Monday at 11:00 PM UTC
  workflow_dispatch:

jobs:
  run_ice_report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run weekly ice report
      run: python weekly_ice_report.py

    - name: Process JSON and create report
      run: |
        python -c "
        import json
        from datetime import datetime

        # Read the JSON file
        filename = f'weekly_results_{datetime.now().strftime(\"%Y%m%d\")}.json'
        print(f'Attempting to read file: {filename}')
        with open(filename, 'r') as f:
            data = json.load(f)

        # Create a readable report
        report = 'Weekly Ice Report\n\n'
        for week in data:
            report += f'Week {week[\"week\"]}:\n'
            report += f'  Lowest scoring team: {week[\"team\"]} with {week[\"score\"]} points\n'
            report += '  Zeros or less from your starters:\n'
            
            low_scorers = week.get('low_scorers', [])
            print(f'Low scorers for week {week[\"week\"]}: {low_scorers}')
            
            if isinstance(low_scorers, list) and low_scorers:
                for player in low_scorers:
                    if isinstance(player, dict):
                        team_name = player.get('team_name', 'Unknown Team')
                        starters = player.get('low_scoring_starters', [])
                        points = player.get('low_scoring_points', [])
                        report += f'    - {team_name}:\n'
                        for starter, point in zip(starters, points):
                            report += f'      * {starter}: {point} points\n'
                    else:
                        report += f'    - {player}\n'
            elif isinstance(low_scorers, str):
                report += f'    {low_scorers}\n'
            else:
                report += '    No low scoring starters this week.\n'
            report += '\n'

        # Write the report to a file
        with open('weekly_report.txt', 'w') as f:
            f.write(report)
        print('Report content:')
        print(report)
        print('Report generated successfully')
        "

    - name: Send email
      uses: dawidd6/action-send-mail@v2
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.EMAIL_USER}}
        password: ${{secrets.EMAIL_PASS}}
        subject: Weekly Ice Report
        body: file://weekly_report.txt
        to: connor.wooley12@gmail.com
        from: GitHub Actions

    - name: Upload report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: weekly-report
        path: weekly_report.txt
