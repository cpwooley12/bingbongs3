name: Weekly Ice Report

on:
  schedule:
    - cron: '0 23 * * 1'  # Every Monday at 11:00 PM UTC
  workflow_dispatch:

jobs:
  run_ice_report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run weekly ice report
      run: python weekly_ice_report.py

    - name: Process JSON and create report
      run: |
        python -c "
        import json
        from datetime import datetime
        import requests

        def get_weekly_results(week, league_id):
            url = f'https://api.sleeper.app/v1/league/{league_id}/matchups/{week}'
            response = requests.get(url)
            if response.status_code == 200:
                return response.json()
            else:
                print(f'Failed to fetch matchup data for week {week}. Status: {response.status_code}')
                return []

        def get_low_scorers(weekly_results):
            low_scorers = []
            for team in weekly_results:
                team_name = team.get('team_name', f'Team {team.get(\"roster_id\", \"Unknown\")}')
                starters = team.get('starters', [])
                starter_points = team.get('starters_points', [])
                low_scoring = [(s, p) for s, p in zip(starters, starter_points) if p <= 0]
                if low_scoring:
                    low_scorers.append({'team_name': team_name, 'low_scoring': low_scoring})
            return low_scorers

        # Read the JSON file
        filename = f'weekly_results_{datetime.now().strftime(\"%Y%m%d\")}.json'
        print(f'Attempting to read file: {filename}')
        with open(filename, 'r') as f:
            data = json.load(f)

        # Define league_id (replace with your actual league ID)
        league_id = '1117180538298658816'

        # Create a readable report
        report = 'Weekly Ice Report\n\n'
        for week_data in data:
            week = week_data['week']
            report += f'Week {week}:\n'
            report += f'  Lowest scoring team: {week_data[\"team\"]} with {week_data[\"score\"]} points\n'
            report += '  Zeros or less from your starters:\n'
            
            weekly_results = get_weekly_results(week, league_id)
            low_scorers = get_low_scorers(weekly_results)
            
            if low_scorers:
                for team in low_scorers:
                    report += f'    - {team[\"team_name\"]}:\n'
                    for starter, points in team['low_scoring']:
                        report += f'      * {starter}: {points} points\n'
            else:
                report += '    No starters with zero or negative points this week.\n'
            report += '\n'

        # Write the report to a file
        with open('weekly_report.txt', 'w') as f:
            f.write(report)
        print('Report content:')
        print(report)
        print('Report generated successfully')
        "

    - name: Send email
      uses: dawidd6/action-send-mail@v2
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.EMAIL_USER}}
        password: ${{secrets.EMAIL_PASS}}
        subject: Weekly Ice Report
        body: file://weekly_report.txt
        to: connor.wooley12@gmail.com
        from: GitHub Actions

    - name: Upload report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: weekly-report
        path: weekly_report.txt
